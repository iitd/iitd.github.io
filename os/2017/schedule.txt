Start: Jan 3, 2017
Stop: Apr 28, 2017
Schedule: Tuesday, Wednesday, Friday

HOLIDAY: Jan 26. Republic Day
HOLIDAY: Jan 31. Minor 1
HOLIDAY: Feb 1. Minor 1
HOLIDAY: Feb 3. Minor 1
HOLIDAY: Mar 22. Minor 2
HOLIDAY: Mar 24. Minor 2
HOLIDAY: Feb 24. Maha Shivaratri
HOLIDAY: Apr 14. Good Friday

HEADER: Links to notes etc. on future days are <i>tentative only</i>. They are here only to give you an idea what the future will bring.<br>SG refers to the book by Silberschatz and Galvin<br>
TITLE: COL331 / COL633 : Operating Systems : Schedule
SEMESTER: Sem II, 2016-17

==

<a href=http://www.cse.iitd.ernet.in/~sbansal/os/hohlabs>Lab 1: Shell (1.1-1.4)</a>
OUT: Jan 17
DUE: Jan 24

==

<a href=http://www.cse.iitd.ernet.in/~sbansal/os/hohlabs>Lab 2: Threads (2.1-2.4)</a>
OUT: Feb 21
DUE: Mar 7

==

<a href=http://www.cse.iitd.ernet.in/~sbansal/os/hohlabs>Lab 3: Concurrency (3.1)</a>
OUT: Mar 28
DUE: Apr 18

==

LEC: <a href=lec/l1.html>Introduction to UNIX System Calls</a>
PREP: Read <a href=bib/ritchie79evolution.pdf>The Evolution of the Unix Time-Sharing System</a>.
OSC: chapter 1

==

LEC: <a href=lec/l2.html>Introduction to UNIX System Calls (2)</a>
PREP: Read <a href=book-rev9.pdf>xv6 chapter 0</a>, <a href=http://linux.die.net/man/7/pipe>pipe</a> man page, <a href=http://www.gnu.org/s/hello/manual/libc/Interrupted-Primitives.html>Interrupted Primitives</a>.

==

LEC: <a href=lec/l3.html>Other OS Abstractions: Threads, Address Spaces, Filesystem, Devices</a> (<a href=slides/threads.pdf>illustrations</a>)

==

LEC: <a href=lec/l4.html>PC Architecture</a> (<a href=slides/l4.pdf>slides</a>)
PREP: read <a href=ref/pc-arch.html>IA-32 guide</a>.

==

LEC: <a href=lec/l5.html>x86 Instruction Set, GCC Calling Conventions</a>

==

LEC: <a href=lec/l6.html>Physical Memory Map, I/O, Segmentation</a>

==

LEC: <a href=lec/l7.html>Segmentation, Trap Handling</a>

==

LEC: <a href=lec/l8.html>Traps, Trap Handlers</a>

==

LEC: <a href=lec/l9.html>Kernel data structures, Memory Management</a>
PREP: <b>do <a href=hw/hw1.html>homework</a></b>
==

LEC: <a href=lec/l10.html>Segmentation Review, Paging Intro</a> (<a href=lec/x86_translation_and_registers.pdf>diagrams</a>)
PREP: read <a href=book-rev9.pdf>xv6 chapter 2</a>, optionally read <a href=ref/ia32-3.pdf>80386 chapter 3</a>

==

LEC: <a href=lec/l11.html>Paging</a> (<a href=lec/l4-mmu.pdf>MMU</a>)

==

LEC: <a href=lec/l12.html>Process Address Spaces using Paging</a>
PREP: Read <a href=book-rev9.pdf>xv6 chapter 1</a>, <a href=http://duartes.org/gustavo/blog/post/anatomy-of-a-program-in-memory>Process Anatomy</a>
OSC: 3.1-3.3

==

LEC: <a href=lec/l13.html>TLBs, Large Pages, Boot sector</a>

==


LEC: <a href=lec/l14.html>Loading the kernel, Initializing the page table</a>

==

LEC: <a href=lec/l15.html>Setting up page tables for user processes</a>

==

LEC: <a href=lec/l16.html>Processes in Action</a>
PREP: <b>do <a href=hw/hw2.html>homework</a> (<a href=hw/hw2-pointers.c>hw2-pointers.c</a>)</b>

==

LEC: <a href=lec/l17.html>Process Structure, Switching</a>

==

LEC: <a href=lec/l18.html>Process kstack, scheduler, fork, context-switch, PCB, trap entry and return</a>
PREP: Read <a href=book-rev9.pdf>xv6 chapter 1</a>

==

LEC: <a href=lec/l19.html>Creating the first process</a>
PREP: Read <a href=book-rev9.pdf>xv6 chapter 5 through section "<i>Code: Scheduling</i>"</a> with proc.c, setjmp.S, and sys_fork (in sysproc.c)
OSC: chapter 5

==

LEC: <a href=lec/l20.html>Handling User Pointers, Concurrency</a> (<a href=lec/idt.pdf>x86 IDT details</a>)
PREP: Read <a href=book-rev9.pdf>xv6 chapter 3</a>

==

LEC: <a href=lec/l21.html>Locking</a>
PREP: Read <a href=book-rev9.pdf>xv6 chapter 4</a> with spinlock.c and skim mp.c<br><a href=http://stackoverflow.com/questions/187761/recursive-lock-mutex-vs-non-recursive-lock-mutex>Recursive vs. Non-Recursive Locks</a>

==

LEC: <a href=lec/l22.html>Fine-grained locking and its challenges</a>

==

LEC: <a href=lec/l23.html>Locking variations</a>

==

LEC: <a href=lec/l24.html>Condition variables</a>

==

LEC: <a href=lec/l25.html>Multiple producer, multiple consumer queue; semaphores; monitors</a>

==

LEC: <a href=lec/l26.html>Transactions (lock-free primitives), read-write locks</a>

==

LEC: <a href=lec/l27.html>Synchronization in xv6: acquire/release, sleep/wakeup, exit/wait</a>
PREP: Read rest of <a href=book-rev9.pdf>xv6 chapter 5</a>; read remainder of proc.c and sys_wait, sys_exit, sys_kill.
OSC: chapters 6, 7

==

LEC: <a href=lec/l28.html>More synchronization in xv6: kill, IDE device driver; demand paging</a>

==

LEC: <a href=lec/l29.html>Demand paging and replacement</a> (<a href=lec/lecture11.pdf>slides</a>)<br>
OSC: chapter 9

==

LEC: <a href=lec/l30.html>Page Replacement, Thrashing</a> (<a href=lec/lecture12.pdf>slides</a>)<br>

==

LEC: <a href=lec/l31.html>Storage devices, Filesystem interfaces</a><br>
PREP: <b>do <a href=hw/hw3.html>homework</a></b>

==

LEC: <a href=lec/l32.html>Filesystem Implementation</a><br>
PREP: xv6 book <a href=book-rev9.pdf>chapter 6</a> and <a href=book-rev9.pdf>chapter 7</a>
OSC: chapters 12, 13

==

LEC: <a href=lec/l33.html>Filesystem Operations</a><br>

==

LEC: <a href=lec/l34.html>Crash Recovery and Logging</a>

==

LEC: <a href=lec/l35.html>Logging in ext3</a>
PREP: Read <a href=bib/tweedie98journaling.pdf>Journaling the Linux ext2fs Filesystem</a>

==

LEC: <a href=lec/l36.html>Protection and Security</a>

==

LEC: <a href=lec/l37.html>Scheduling Policies</a>

==
LEC: <a href=lec/l38.html>Multi-processor coordination: lock free</a>
PREP: optionally read <a href=bib/mckenney01read.pdf>Read-Copy-Update</a>, <a href=bib/clements-bonsai.pdf>Address Space Using RCU Trees</a>

==

LEC: <a href=lec/l39.html>Microkernels, Exokernels, Multikernels</a>

==

LEC: <a href=lec/l40.html>Virtualization, Cloud Computing, Technology trends</a>

==

LEC: HW4
PREP: <b>do <a href=hw/hw4.html>homework</a></b>

==

