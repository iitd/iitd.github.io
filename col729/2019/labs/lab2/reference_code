
C-code
===========

 char *result;
 int Example0() {
    int  var1 = 10;
    int var2 = 100;
    int var3 = 1000;
    int *ptr_arr[3];
    
    ptr_arr[0] = &var1;
    ptr_arr[1] = &var2;
    ptr_arr[2] = &var3;
 
    int sum =0;
    for (int i = 0; i < 3; i++) {
       sum += *ptr_arr[i];
    }
    result = sum > 0 ? "Pass"  : "Fail";
    return sum;
 }
   

LLVM-bitcode
============
-- Results of may-points to analysis pass is shown on the left hand side

 ; Function Attrs: nounwind
 define i32 @Example0() #0 {
   %var1    -> %var1                ||   %var1 = alloca i32, align 4
   %var2    -> %var2                ||   %var2 = alloca i32, align 4
   %var3    -> %var3                ||   %var3 = alloca i32, align 4
   %ptr_arr -> %ptr_arr             ||   %ptr_arr = alloca [3 x i32*], align 4
                                    ||   store i32 10, i32* %var1, align 4
                                    ||   store i32 100, i32* %var2, align 4
                                    ||   store i32 1000, i32* %var3, align 4
   %1       -> %ptr_arr             ||   %1 = getelementptr inbounds [3 x i32*]* %ptr_arr, i32 0, i32 0
   %ptr_arr -> %var1                ||   store i32* %var1, i32** %1, align 4
   %2       -> %ptr_arr             ||   %2 = getelementptr inbounds [3 x i32*]* %ptr_arr, i32 0, i32 1
   %ptr_arr -> {%var1, %var2}       ||   store i32* %var2, i32** %2, align 4
   %3       -> %ptr_arr             ||   %3 = getelementptr inbounds [3 x i32*]* %ptr_arr, i32 0, i32 2
   %ptr_arr -> {%var1,%var2,%var3}  ||   store i32* %var3, i32** %3, align 4
                                    ||   br label %4
                                    || 
                                    || ; <label>:4                                       ; preds = %11, %0
                                    ||   %i.0 = phi i32 [ 0, %0 ], [ %12, %11 ]
                                    ||   %sum.0 = phi i32 [ 0, %0 ], [ %10, %11 ]
                                    ||   %5 = icmp slt i32 %i.0, 3
                                    ||   br i1 %5, label %6, label %13
                                    || 
                                    || ; <label>:6                                       ; preds = %4
   %7	 -> %ptr_arr                ||   %7 = getelementptr inbounds [3 x i32*]* %ptr_arr, i32 0, i32 %i.0
   %8    -> {%var1,%var2,%var3}     ||   %8 = load i32** %7, align 4
                                    ||   %9 = load i32* %8, align 4
                                    ||   %10 = add nsw i32 %sum.0, %9
                                    ||   br label %11
                                    || 
                                    || ; <label>:11                                      ; preds = %6
                                    ||   %12 = add nsw i32 %i.0, 1
                                    ||   br label %4
                                    ||   
                                    || ; <label>:13                                      ; preds = %4
                                    ||   %14 = icmp sgt i32 %sum.0, 0
   %15      -> str23                ||   %15 = i8* getelementptr inbounds ([5 x i8]* @.str23, i32 0, i32 0)
   %16      -> str24                ||   %16 = i8* getelementptr inbounds ([5 x i8]* @.str24, i32 0, i32 0)
   %17      -> {str23, str24}       ||   %17 = select i1 %14, %15, %16
   result   -> {str23, str24}       ||   store i8* %17, i8** @result, align 4
                                    ||   ret i32 %sum.0
 }

