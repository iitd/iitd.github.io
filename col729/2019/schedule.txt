TITLE: COL729 : Compiler Optimization : Schedule
SEMESTER: Sem II, 2018-19
Start: Dec 31, 2018
Stop: May 1, 2019
Schedule: Monday, Thursday
HEADER: Links to notes etc. on future days are <i>tentative only</i>. They are here only to give you an idea what the future will bring.<br>

HOLIDAY: Jan 14. Makar Sankranti
HOLIDAY: Jan 26. Republic Day
HOLIDAY: Mar 04. Maha Shivratri
HOLIDAY: Mar 07. Semester break
HOLIDAY: Mar 21. Holi
HOLIDAY: Apr 17. Mahavir Jayanti
HOLIDAY: Apr 19. Good Friday
HOLIDAY: May 6. Idu'l Fitr

SKIP: Feb 4. MINOR1 TESTS
SKIP: Feb 7. MINOR1 TESTS
SKIP: Mar 25. MINOR2 TESTS
SKIP: Mar 28. MINOR2 TESTS

==
LEC: <a href=lec/intro.html>Introduction to Interpreters, Compilers, and Programming Languages</a>
==
LEC: <a href=lec/runtime_organization.html>Runtime Organization</a>
==
LEC: <a href=lec/code_generation_intro.html>Introduction to Code Generation</a>
==
LEC: <a href=lec/code_generation.html>Code Generation</a>, <a href=lec/code_generation_objects.html>Code Generation for Objects</a>
==
LEC: <a href=lec/intermediate_language.html>Intermediate Language</a>, <a href=lec/optimization_overview.html>Optimization Overview</a>
==
LEC: <a href=lec/local_optimization.html>Local Optimization</a>
==
LEC: <a href=lec/dataflow_analysis.html>Dataflow analysis</a>, <a href=lec/global_constant_propagation.html>Global constant propagation</a>
==
LEC: <a href=lec/dataflow_analysis_foundations.html>Foundations of Dataflow Analysis</a>
==
LEC: <a href=lec/dataflow_analysis_foundations.html>Foundations of Dataflow Analysis</a> (contd.)
==
LEC: <a href=lec/dataflow_analysis_foundations.html>Foundations of Dataflow Analysis</a> (contd.)
==
LEC: <a href=lec/lazy_code_motion.html>Lazy code motion</a>
==
LEC: <a href=lec/lazy_code_motion.html>Lazy code motion</a> (contd.), <a href=lec/phase_ordering_problem.html>Phase ordering problem</a>
==
LEC: <a href=lec/loop_transformations.html>Regions</a>
==
LEC: <a href=lec/loop_transformations.html>Regions contd.</a>
==
LEC: <a href=lec/loop_transformations.html>Loop transformations</a>
==
LEC: <a href=lec/affine_transformations.html>Affine loop transformations</a>.
==
LEC: <a href=lec/matrix_multiplication.html>Matrix multiplication</a>, <a href=lec/affine_transform_theory.html>Affine transform theory</a>.
==
LEC: <a href=lec/locality.html>Re-use and locality</a>.
==
LEC: <a href=lec/array_dependence_analysis.html>Array Dependence Analysis</a>, <a href=lec/parallelism_no_sync.html>Loop transformations for parallelism with no synchronization</a>.
==
LEC: Aho et. al., Section 11.7.1-11.7.3
==
LEC: Aho et. al., Section 11.7.4-11.7.8
==
LEC: Aho et. al., Section 11.7.8. <a href=lec/affine_transform_examples.html>Some more examples</a>
==
LEC: Section 11.8-11.8.2. <a href=lec/constant_sync.html>Some examples and discussion</a>.
==
LEC: SOR example <a href=lec/pipelining.html>Loop transformations for pipelining</a>.
==
LEC: covered till discussing the two fully-permutable transforms of the SOR example
==
